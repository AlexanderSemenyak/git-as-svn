msgid ""
msgstr ""
"Project-Id-Version: git-as-svn\n"
"POT-Creation-Date: 2015-12-21 07:13+0300\n"
"PO-Revision-Date: 2015-12-21 07:12+0300\n"
"Last-Translator: Artem V. Navorskiy\n"
"Language-Team: English\n"
"Language: en_US\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 1.8.4\n"

#: base/manual.xml:10(title)
msgid "Manual"
msgstr "Manual"

#: base/manual.xml:13(firstname)
msgid "Artem"
msgstr "Artem"

#: base/manual.xml:14(surname)
msgid "Navrotskiy"
msgstr "Navrotskiy"

#: base/manual.xml:17(pubdate)
msgid "2015"
msgstr "2015"

#: base/manual.xml:20(year)
msgid "2014-2015"
msgstr "2014-2015"

#: base/manual.xml:22(holder)
msgid "Artem Navrotskiy"
msgstr "Artem Navrotskiy"

#: base/manual.xml:25(productname)
msgid "git-as-svn"
msgstr "git-as-svn"

#: base/ch_gitlab.xml:9(title)
msgid "Интеграция с GitLab"
msgstr "GitLab integration"

#: base/ch_gitlab.xml:12(title)
msgid "Список исправлений для GitLab"
msgstr "Recommended GitLab patches"

#: base/ch_gitlab.xml:14(para)
msgid ""
"Для интеграции с GitLab нужно установить следующие исправления на GitLab:"
msgstr "For integration with GitLab install the following patches on GitLab:"

#: base/ch_gitlab.xml:20(link)
msgid "#230 (gitlab-shell)"
msgstr "#230 (gitlab-shell)"

#: base/ch_gitlab.xml:21(phrase)
msgid ": Add git-lfs-authenticate to server white list (merged to 7.14.1);"
msgstr ": Add git-lfs-authenticate to server white list (merged to 7.14.1);"

#: base/ch_gitlab.xml:27(link)
msgid "#237 (gitlab-shell)"
msgstr "#237 (gitlab-shell)"

#: base/ch_gitlab.xml:28(phrase)
msgid ""
": Execute git-lfs-authenticate command with original arguments (merged to "
"8.2.0);"
msgstr ""
": Execute git-lfs-authenticate command with original arguments (merged to "
"8.2.0);"

#: base/ch_gitlab.xml:34(link)
msgid "#9591 (gitlabhq)"
msgstr "#9591 (gitlabhq)"

#: base/ch_gitlab.xml:35(phrase)
msgid ": Add API for lookup user information by SSH key ID (merged to 8.0.0);"
msgstr ": Add API for lookup user information by SSH key ID (merged to 8.0.0);"

#: base/ch_gitlab.xml:41(link)
msgid "#9728 (gitlabhq)"
msgstr "#9728 (gitlabhq)"

#: base/ch_gitlab.xml:42(phrase)
msgid ""
": Show \"Empty Repository Page\" for repository without branches (merged to "
"8.2.0)."
msgstr ""
": Show \"Empty Repository Page\" for repository without branches (merged to "
"8.2.0)."

#: base/ch_gitlab.xml:49(title)
msgid "Точки стыка интеграции с GitLab"
msgstr "GitLab intergration points"

#: base/ch_gitlab.xml:51(para)
msgid "В случае с GitLab есть несколько точек стыка:"
msgstr "There are some intgeration points with GitLab:"

#: base/ch_gitlab.xml:55(para)
msgid "Список репозиториев"
msgstr "The list of repositories"

#: base/ch_gitlab.xml:57(para)
msgid ""
"Git as Subversion автоматически получает список репозиториев в момент старта "
"через GitLab API."
msgstr ""
"Git as a Subversion automatically retrieves the list of repositories on "
"startup via the GitLab API."

#: base/ch_gitlab.xml:60(para)
msgid ""
"Далее этот список поддерживается в актуальном состоянии при помощи System "
"Hook, который так же регистрируется автоматически."
msgstr ""
"Further, this list is updated by System Hook, which is registered "
"automatically."

#: base/ch_gitlab.xml:66(para)
msgid "Авторизация и аутентификация пользователей"
msgstr "Authorization and authentication of users"

#: base/ch_gitlab.xml:68(para)
msgid ""
"Для аутентификации пользователей и определения наличия прав на репозиторий "
"так же используется GitLab API."
msgstr ""
"For authenticating users and repository permission control is also used "
"GitLab API."

#: base/ch_gitlab.xml:73(para)
msgid "Git Hooks"
msgstr "Git Hooks"

#: base/ch_gitlab.xml:75(para)
msgid ""
"При коммите через Git as Subversion выполняются хуки от GitLab. Эти хуки, в "
"частности, позволяют видеть информацию о новых коммитах без задержки через "
"WEB-интерфейс GitLab."
msgstr ""
"When you commit using Git as Subversion the GitLab hooks are executed. These "
"hooks, in particular, allow to see information about new commits without "
"delay via the GitLab WEB interface."

#: base/ch_gitlab.xml:79(para)
msgid ""
"Для того, чтобы этот функционал работал, Git as Subversion должен передать "
"идентификатор GitLab-пользователя (GL_ID), полученный при его авторизации."
msgstr ""
"GitLab Hooks require GitLab user ID information (GL_ID environment variable) "
"received at user authorization."

#: base/ch_gitlab.xml:84(para)
msgid ""
"Из-за этого в случае интеграции с GitLab авторизация пользователей должна "
"так же проходить через GitLab."
msgstr ""
"Because of this, in the case of integration with GitLab user authentication "
"must be via GitLab."

#: base/ch_gitlab.xml:90(para)
msgid "Git LFS"
msgstr "Git LFS"

#: base/ch_gitlab.xml:92(para)
msgid ""
"В случае использования Git LFS надо так же указать путь до GitLab LFS "
"хранилища."
msgstr "In the case of GitLFS need to specify the path to GitLab LFS storage."

#: base/ch_gitlab.xml:95(para)
msgid ""
"GitLab с версии 8.2 использует общее хранилище LFS-файлов для всех "
"репозиториев. Файлы хранятся в отдельном каталоге в сыром виде."
msgstr ""
"GitLab from version 8.2 uses single LFS-files storage shared between all "
"repositories. Files are stored in a separate directory as raw data."

#: base/ch_gitlab.xml:99(para)
msgid ""
"Интеграция с LFS хранилищем GitLab происходит на уровне файлов. Никакое API "
"от GitLab при этом не используется."
msgstr ""
"Integration with LFS repository GitLab occurs at the file level. GitLab API "
"is not used."

#: base/ch_gitlab.xml:104(para)
msgid "Git LFS авторизация для SSH-пользователей"
msgstr "Git LFS authorization for SSH users"

#: base/ch_gitlab.xml:106(para)
msgid ""
"К сожалению, GitLab не предоставляет скрипт git-lfs-authenticate, который "
"отвечает за SSO авторизацию SSH-пользователей на Git LFS сервере. Для "
"настройки данного скрипта см. <xref linkend=\"git-lfs-authenticate\"/>."
msgstr ""
"Unfortunately, GitLab does't provide the git-lfs-authenticate script, which "
"is responsible for SSO authorization SSH-user Git on the server LFS. To "
"configure this script, see <xref linkend=\"git-lfs-authenticate\"/>."

#: base/ch_gitlab.xml:115(title)
msgid "Пример конфигурационного файла"
msgstr "Configuration file example"

#: base/ch_about.xml:8(title)
msgid "О проекте"
msgstr "About project"

#: base/ch_about.xml:11(title)
msgid "Что это?"
msgstr "What is it?"

#: base/ch_about.xml:13(para)
msgid ""
"Git as Subversion — это реализация Subversion-сервера (по протоколу svn) для "
"Git-репозиториев."
msgstr ""
"Git as Subversion — Subversion-server implementation (svn protocol) for Git-"
"repositories."

#: base/ch_about.xml:16(para)
msgid ""
"Он позволяет работать с Git-репозиторием, используя консольный Subversion-"
"клиент, TortoiseSVN, SvnKit и подобный инструментарий."
msgstr ""
"This project allows to work with Git-repository using Subversion console "
"client, TortoiseSVN, SvnKit and other similar tools."

#: base/ch_about.xml:21(title)
msgid "Какова цель проекта?"
msgstr "What is project goal?"

#: base/ch_about.xml:23(para)
msgid ""
"Проект создан для того, чтобы позволить работать с одним и тем же "
"репозиторием как в Git-стиле, так и в Subversion-стиле."
msgstr ""
"The project is designed to allow you to work with the same repository as "
"Git, Subversion and style."

#: base/ch_about.xml:28(glossterm)
msgid "Git-стиль"
msgstr "Git style"

#: base/ch_about.xml:31(para)
msgid ""
"Основная идея сводится к тому, что разработчик производит все изменения в "
"локальной ветке. Эти изменения никак не влияют на работу остальных "
"разработчиков, но тем не менее их можно протестировать на сборочной ферме, "
"передать другому разработчику на проверку и т.д."
msgstr ""
"The basic idea is that the developer works in the local branch. His changes "
"do not affect the work of other developers, but nonetheless they can be "
"tested on CI farm, review by another developer and etc."

#: base/ch_about.xml:37(para)
msgid ""
"Это позволяет каждому разработчику вести работу независимо, так, как ему "
"удобно, изменяя и сохраняя промежуточные версии документов, пользуясь всеми "
"возможностями системы (в том числе доступом к истории изменений) даже в "
"отсутствие сетевого соединения с сервером."
msgstr ""
"This allows each developer to work independently, as best he can. He can "
"change and saving intermediate versions of documents, taking full advantage "
"of the version control system (including access to the change history) even "
"without network connection to the server."

#: base/ch_about.xml:43(para)
msgid ""
"К сожалению, этот подход не работает в случае, когда изменяемые документы не "
"поддерживают слияние (например, это характерно для двоичных файлов)."
msgstr ""
"Unfortunately, this approach does not work with not mergeable documents (for "
"example, binary files)."

#: base/ch_about.xml:50(glossterm)
msgid "Subversion-стиль"
msgstr "Subversion style"

#: base/ch_about.xml:53(para)
msgid ""
"Использование централизованной системы контроля версий более удобно в случае "
"использования документов не поддерживающих слияние (например, это характерно "
"для двоичных файлов) за счет наличия механизма блокировок и более простого и "
"короткого цикла публикации изменений."
msgstr ""
"The use of a centralized version control system is more convenient in the "
"case of documents do not support the merge (for example, with binary files) "
"due to the presence of the locking mechanism and a simpler and shorter "
"publication cycle changes."

#: base/ch_about.xml:62(para)
msgid ""
"Необходимость совместить Git-стиль и Subversion-стиль работы с одим "
"репозиторием возникает из-за того, что разные сотрудники в рамках одного "
"проекта работают с принципиально разными данными. Если утрировать, то "
"программисты предпочитают Git, а художники любят Subversion."
msgstr ""
"The need to combine Git and Subversion style work with one repository arises "
"from the fact that different employees in the same project are working from "
"fundamentally different data. If you overdo, you Git programmers, and "
"artists like Subversion."

#: base/ch_about.xml:69(title)
msgid "Как оно работает?"
msgstr "How does it work?"

#: base/ch_about.xml:72(title)
msgid "Где хранятся Subversion-данные репозитория?"
msgstr ""

#: base/ch_about.xml:74(para)
msgid ""
"Для предоставляние Subversion репозитория нужно хранить информацию о том, "
"какой номер Subversion-ревизии соответвует какому Git-коммиту. Вычислять эту "
"информацию при запуске нельзя, так как первый же <command>git push --force</"
"command> все сломает. Эти данные лежат в ветках <filename>refs/git-as-svn/*</"
"filename>. В частности из-за этого не требуется отдельного резервного "
"копирования для Subversion-данных."
msgstr ""

#: base/ch_about.xml:82(para)
msgid ""
"Так же для представления Subversion репозитория часть данных очень дорого "
"получить на основании Git-репозитория."
msgstr ""

#: base/ch_about.xml:85(para)
msgid "Например:"
msgstr ""

#: base/ch_about.xml:89(para)
msgid "номер ревизии, когда файл менялся в послдений раз;"
msgstr ""

#: base/ch_about.xml:93(para)
msgid "данные о том, откуда был скопирован файл;"
msgstr ""

#: base/ch_about.xml:97(para)
msgid "MD5-хэш файла."
msgstr "MD5 file hash."

#: base/ch_about.xml:101(para)
msgid ""
"Чтобы не заниматься их расчетом каждый запуск, эти данные кэширутся в "
"файлах. Потеря данного кэша не критична для работы и его резервное "
"копирование не имеет смысла."
msgstr ""

#: base/ch_about.xml:105(para)
msgid ""
"Данные о блокировкая файлов в данный момент так же хранятся в файла кэша."
msgstr ""

#: base/ch_about.xml:110(title)
msgid "Как работает коммит?"
msgstr ""

#: base/ch_about.xml:112(para)
msgid "Одна из самых важных деталей системы — сохранение изменений."
msgstr ""

#: base/ch_about.xml:115(para)
msgid "В общих чертах, идея следующая:"
msgstr ""

#: base/ch_about.xml:119(para)
msgid ""
"В момент команды <command>svn commit</command> клиент отправляет на сервер "
"свои изменения. Сервер при этом запоминает их. В этот же момент происходит "
"первая проверка на актуальность клиентских данных."
msgstr ""

#: base/ch_about.xml:126(para)
msgid ""
"Сервер берет голову ветки и начинает формировать новый коммит на базе "
"полученных от клиента данных. В этот момент происходит ещё одна проверка на "
"актуальность клиентских данных."
msgstr ""

#: base/ch_about.xml:132(para)
msgid "Проверяется целостность svn properties для заливаемых данных."
msgstr ""

#: base/ch_about.xml:137(para)
msgid ""
"Сервер пытается консольным Git-клиентом сделать push нового коммита в "
"текущую ветку этого же репозитория. Далее по результату push-а:"
msgstr ""

#: base/ch_about.xml:143(para)
msgid ""
"если все хорошо — загружаем последние изменения из git-коммитов и радуемся;"
msgstr ""

#: base/ch_about.xml:148(para)
msgid ""
"если не fast forward — загружаем последние изменения из git-коммитов и идём "
"к шагу 2;"
msgstr ""

#: base/ch_about.xml:153(para)
msgid "если отбили хуки — сообщаем клиенту;"
msgstr ""

#: base/ch_about.xml:157(para)
msgid "если другая ошибка — сообщаем клиенту."
msgstr ""

#: base/ch_about.xml:163(para)
msgid ""
"Таким образом, за счёт использования в данной операции консольного Git-а мы "
"избегает гонки с заливкой напрямую через Git, и получаем хуки в качестве "
"приятного бонуса."
msgstr ""

#: base/ch_about.xml:169(title)
msgid "Отличие от других решений"
msgstr ""

#: base/ch_about.xml:171(para)
msgid "Ряд способов позволяет решить схожие задачи."
msgstr ""

#: base/ch_about.xml:174(title)
msgid "Поддержка Subversion у GitHub"
msgstr ""

#: base/ch_about.xml:176(para)
msgid "Это, наверное, самый близкий аналог."
msgstr ""

#: base/ch_about.xml:178(para)
msgid ""
"Основная проблема данной реализации — неотделимость от GitHub. Так же, "
"внезапно, данная реализация не поддерживает Git LFS."
msgstr ""

#: base/ch_about.xml:183(title)
msgid "SubGit"
msgstr "SubGit"

#: base/ch_about.xml:185(para)
msgid ""
"Сайт: <link ns6:href=\"http://www.subgit.com/\">http://www.subgit.com/</link>"
msgstr ""

#: base/ch_about.xml:188(para)
msgid ""
"Достаточно интересная реализация при которой поддерживаются Git и Subversion-"
"репозитории в синхронном состоянии. За счет чего обеспечивается синхронность "
"репозиториев — не понятно."
msgstr ""

#: base/ch_about.xml:194(title)
msgid "Subversion репозиторий и git svn"
msgstr ""

#: base/ch_about.xml:196(para)
msgid ""
"Данный способ позволяет использовать Git при работе с Subversion-"
"репозиторием, но использование общего Git-репозитория между несколькими "
"разработчиками сильно затруднено."
msgstr ""

#: base/ch_about.xml:204(title)
msgid "Функционал"
msgstr "Features"

#: base/ch_about.xml:207(title)
msgid "Что уже есть?"
msgstr "What is already there?"

#: base/ch_about.xml:211(para)
msgid "Работаю, как минимум, следующие клиенты:"
msgstr "You can use at least the following clients:"

#: base/ch_about.xml:215(para)
msgid "Консольный Subversion-клиент;"
msgstr "Subversion console client;"

#: base/ch_about.xml:219(para)
msgid "TortoiseSVN;"
msgstr "TortoiseSVN;"

#: base/ch_about.xml:223(para)
msgid "SvnKit."
msgstr "SvnKit."

#: base/ch_about.xml:229(para)
msgid "Работают, как минимум, следующие операции:"
msgstr "Supported subversion operations:"

#: base/ch_about.xml:233(para)
msgid "svn checkout, update, switch, diff"
msgstr "svn checkout, update, switch, diff"

#: base/ch_about.xml:237(para)
msgid "svn commit"
msgstr "svn commit"

#: base/ch_about.xml:242(para)
msgid ""
"Операции поддерживаются, но данные об источнике копирования не сохраняются."
msgstr ""
"Operations are supported, but the data about the source of a copy is not "
"saved."

#: base/ch_about.xml:241(para)
msgid "svn copy, move<placeholder-1/>"
msgstr "svn copy, move<placeholder-1/>"

#: base/ch_about.xml:248(para)
msgid "svn cat, ls"
msgstr "svn cat, ls"

#: base/ch_about.xml:252(para)
msgid "svn lock, unlock"
msgstr "svn lock, unlock"

#: base/ch_about.xml:256(para)
msgid "svn replay (svnsync)"
msgstr "svn replay (svnsync)"

#: base/ch_about.xml:262(para)
msgid "Поддерживается Git LFS;"
msgstr "Git LFS support;"

#: base/ch_about.xml:267(para)
msgid "Данные из git submodule видны в репозитории в режиме только для чтения."
msgstr "Git submodule data available in read only mode."

#: base/ch_about.xml:266(para)
msgid "Поддерживаются git submodules;<placeholder-1/>"
msgstr "Git submodules supported;<placeholder-1/>"

#: base/ch_about.xml:273(para)
msgid "Авторизация через LDAP;"
msgstr "LDAP authorization;"

#: base/ch_about.xml:277(para)
msgid "Интеграция с GitLab."
msgstr "GitLab integration."

#: base/ch_about.xml:283(title)
msgid "Чего еще нет?"
msgstr "What is lacking?"

#: base/ch_about.xml:287(para)
msgid "Категорически не хватает документации;"
msgstr "Strongly enough documentation;"

#: base/ch_about.xml:291(para)
msgid "Из Subversion доступна только одна ветка."
msgstr "You can only access one branch from Subversion."

#: base/ch_about.xml:297(title)
msgid "Технические ограничения"
msgstr "Technical limitations"

#: base/ch_about.xml:301(para)
msgid "Нельзя средствами Subversion менять svn properties."
msgstr "It is impossible to change svn properties by Subversion client."

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: base/ch_about.xml:0(None)
msgid "translator-credits"
msgstr ""
